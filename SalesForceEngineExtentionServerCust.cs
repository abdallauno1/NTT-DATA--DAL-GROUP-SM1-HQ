/*
	Generated by BOCreatorBtc
	Don't Edit!!!
*/
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Text;
using System.Reflection;
using System.IO;
using System.Windows.Threading;
using System.Diagnostics.CodeAnalysis;
using System.Collections.ObjectModel;
using Xtel.Silverlight.Core;
using Xtel.Silverlight.Core.BusinessObjectModel;
using Xtel.Silverlight.Core.Data;
using Xtel.Silverlight.Core.Data.QueryObj;
using Xtel.Silverlight.Common;
namespace Xtel.Silverlight.SalesForce
{

#region SM1Order


    /// <summary>
    /// Customizer interface
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1040:AvoidEmptyInterfaces")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public partial interface ISM1OrderEngineCustomizer
    {
    }

    ///<summary>
    /// Engine per la gestione del documento SM1Order
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public abstract class SM1OrderEngineBase : BusinessDocumentEngine,IAnomalyEngineSupport
    {

        #region Customizer Access


        /// <summary>
        /// Customizer reference
        /// </summary>
        private ISM1OrderEngineCustomizer m_engineCustomizer;

        /// <summary>
        /// Customizer reference
        /// </summary>
        public ISM1OrderEngineCustomizer Customizer
        {
            get { return m_engineCustomizer; }
        }

        #endregion


        #region Constructors


        /// <summary>
        /// Default constructor
        /// </summary>
        public SM1OrderEngineBase()
        {
            m_engineCustomizer = GetCustomizer<ISM1OrderEngineCustomizer>("SM1OrderEngineCustomizer");
        }

        #endregion


        /// <summary>
        /// Check if document exist
        /// </summary>
        /// <param name="codusr">Chiave 1</param>
        /// <param name="numord">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CheckSM1OrderExist(string codusr,int numord,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "CheckSM1OrderExist",
                new object[] { codusr,numord, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document head
        /// </summary>
        /// <param name="codusr">Chiave 1</param>
        /// <param name="numord">Chiave 2</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSM1OrderHead(string codusr,int numord,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "LoadSM1OrderHead",
                new object[] { codusr,numord, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document
        /// </summary>
        /// <param name="codusr">Chiave 1</param>
        /// <param name="numord">Chiave 2</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSM1Order(string codusr,int numord,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "LoadSM1Order",
                new object[] { codusr,numord, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSM1Orders( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "LoadSM1Orders",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSM1Orders( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "LoadSM1Orders",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSM1OrderHeads( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "LoadSM1OrderHeads",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSM1OrderHeads( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "LoadSM1OrderHeads",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Create a new document
        /// </summary>
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        /// <returns />
        public virtual void CreateNewSM1Order(SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "CreateNewSM1Order",
                new object[] { sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document head
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveSM1OrderHead(SM1Order rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "SaveSM1OrderHead",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveSM1Order(SM1Order rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "SaveSM1Order",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// delete a document
        /// </summary>
        /// <param name="codusr">Chiave 1</param>
        /// <param name="numord">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void DeleteSM1Order(string codusr,int numord,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "DeleteSM1Order",
                new object[] { codusr,numord, sc },
                disp,
                target);
        }

        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="codusr">Chiave 1</param>
        /// <param name="numord">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void UnlockSM1Order(string codusr,int numord,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "UnlockSM1Order",
                new object[] { codusr,numord, sc },
                disp,
                target);
        }

        #region Overrides


        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void UnlockDocument(DocumentObject document, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SM1Order doc = document as SM1Order;
            UnlockSM1Order(
                doc.CODUSR,
                doc.NUMORD
                ,sc,disp,target);
        }

        /// <summary>
        /// save a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="keepLocked">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void SaveDocument(DocumentObject document,bool keepLocked, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SaveSM1Order((SM1Order)document,keepLocked,sc,disp,target);
        }

        #endregion


        #region Snapshots


        /// <summary>
        /// Save a snapshot of the input document. Version is auto-incremented
        /// by the system.
        /// </summary>
        /// <param name="bo" />
        /// <param name="description" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void AddVersion(SM1Order bo, string description, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "AddVersion",
                new object[] { bo,description, sc },
                disp,
                target);
        }

        /// <summary>
        ///  Retreive the document with the specified version
        /// </summary>
        /// <param name="connection" />
        /// <param name="documentKey" />
        /// <param name="uniqueKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetVersionByDocumentKey(string documentKey, string uniqueKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "GetVersionByDocumentKey",
                new object[] { documentKey,uniqueKey, sc },
                disp,
                target);
        }

        /// <summary>
        /// Returns the document history. The collection will not
        /// contain the actual snapshot object (the saved xml string).
        /// If you need a specific version, call <code>GetVersion</code> method
        /// </summary>
        /// <param name="documentKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetDocumentHistoryByDocumentKey(String documentKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "GetDocumentHistoryByDocumentKey",
                new object[] { documentKey, sc },
                disp,
                target);
        }

        #endregion


        #region Extra methods


        ///<summary>
        /// Load appliable promotions for a specific order
        ///</summary>
        ///<param name="order">Order</param>
        ///<param name="sc">Contesto utente SM1</param>
        ///<param name="disp">Dispatcher per l'esecuzione del codice al termine della chiamata</param>
        ///<param name="target">Codice da eseguire al termine della chiamata</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public virtual void LoadAppliablePromos(
            SM1Order order,
            SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "LoadAppliablePromos",
                new SilverlightRequestSettings() {  },
                new object[] {
                    order,
                    sc },
                disp,
                target);
        }

        ///<summary>
        /// New document number (NUMDOC) generation
        ///</summary>
        ///<param name="codUsr">User code</param>
        ///<param name="codTypOrd">Order type</param>
        ///<param name="year">Year</param>
        ///<param name="sc">Contesto utente SM1</param>
        ///<param name="disp">Dispatcher per l'esecuzione del codice al termine della chiamata</param>
        ///<param name="target">Codice da eseguire al termine della chiamata</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public virtual void GenerateNumDoc(
            string codUsr,
            string codTypOrd,
            int year,
            SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "GenerateNumDoc",
                new SilverlightRequestSettings() {  },
                new object[] {
                    codUsr,
                    codTypOrd,
                    year,
                    sc },
                disp,
                target);
        }

        ///<summary>
        /// Save order allocation
        ///</summary>
        ///<param name="allocation">Allocation data</param>
        ///<param name="sc">Contesto utente SM1</param>
        ///<param name="disp">Dispatcher per l'esecuzione del codice al termine della chiamata</param>
        ///<param name="target">Codice da eseguire al termine della chiamata</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public virtual void SaveAllocation(
            Allocation allocation,
            SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "SaveAllocation",
                new SilverlightRequestSettings() {  },
                new object[] {
                    allocation,
                    sc },
                disp,
                target);
        }

        ///<summary>
        /// Sets the CODPRINCIPALUSR value
        ///</summary>
        ///<param name="order">Order</param>
        ///<param name="sc">Contesto utente SM1</param>
        ///<param name="disp">Dispatcher per l'esecuzione del codice al termine della chiamata</param>
        ///<param name="target">Codice da eseguire al termine della chiamata</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public virtual void SetPrincipalUser(
            SM1Order order,
            SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "SetPrincipalUser",
                new SilverlightRequestSettings() {  },
                new object[] {
                    order,
                    sc },
                disp,
                target);
        }

        #endregion


        #region IAnomalyEngineSupport


        /// <summary>
        /// CreateAnomalyReport
        /// </summary>
        /// <param name="rootObj" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        public void CreateAnomalyReport(DocumentObject rootObj, AnomalyEvalEnvironment env, SessionContext sc, Dispatcher disp, AsyncDataReceiver target)
        {
            CreateAnomalyReport((SM1Order)rootObj, env, sc, disp, target);
        }

        /// <summary>
        /// EvalAnomalies generic method
        /// </summary>
        /// <param name="rootObj" />
        /// <param name="operation" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        public void EvalAnomalies(DocumentObject rootObj, string operation, AnomalyEvalEnvironment env, SessionContext sc, Dispatcher disp, AsyncDataReceiver target)
        {
            EvalAnomalies((SM1Order) rootObj,  operation,  env,  sc,  disp,  target);
        }

        #endregion


        #region Anomalies support


        /// <summary>
        /// CreateAnomalyReport
        /// </summary>
        /// <param name="rootObj" />
        /// <param name="operation" />
        /// <param name="env" />
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CreateAnomalyReport(SM1Order doc, AnomalyEvalEnvironment env, SessionContext sc, Dispatcher disp, AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "CreateAnomalyReport",
                new object[] { doc, env, sc },
                disp,
                target);
        }

        /// <summary>
        /// EvalAnomalies
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="operation" />
        /// <param name="env" />
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void EvalAnomalies(SM1Order rootObj,string operation,AnomalyEvalEnvironment env,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderEngineSLStub", "EvalAnomalies",
                new object[] { rootObj,operation,env, sc },
                disp,
                target);
        }

        #endregion

    }

    ///<summary>
    /// Engine for document SM1Order
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    public partial class SM1OrderEngine : SM1OrderEngineBase
    {
    }

#endregion


#region SM1OrderConfig


    /// <summary>
    /// Customizer interface
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1040:AvoidEmptyInterfaces")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public partial interface ISM1OrderConfigEngineCustomizer
    {
    }

    ///<summary>
    /// Engine per la gestione del documento SM1OrderConfig
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public abstract class SM1OrderConfigEngineBase : BusinessDocumentEngine
    {

        #region Customizer Access


        /// <summary>
        /// Customizer reference
        /// </summary>
        private ISM1OrderConfigEngineCustomizer m_engineCustomizer;

        /// <summary>
        /// Customizer reference
        /// </summary>
        public ISM1OrderConfigEngineCustomizer Customizer
        {
            get { return m_engineCustomizer; }
        }

        #endregion


        #region Constructors


        /// <summary>
        /// Default constructor
        /// </summary>
        public SM1OrderConfigEngineBase()
        {
            m_engineCustomizer = GetCustomizer<ISM1OrderConfigEngineCustomizer>("SM1OrderConfigEngineCustomizer");
        }

        #endregion


        /// <summary>
        /// Check if document exist
        /// </summary>
        /// <param name="codconfig">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CheckSM1OrderConfigExist(string codconfig,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "CheckSM1OrderConfigExist",
                new object[] { codconfig, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document head
        /// </summary>
        /// <param name="codconfig">Chiave 1</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSM1OrderConfigHead(string codconfig,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "LoadSM1OrderConfigHead",
                new object[] { codconfig, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document
        /// </summary>
        /// <param name="codconfig">Chiave 1</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSM1OrderConfig(string codconfig,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "LoadSM1OrderConfig",
                new object[] { codconfig, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSM1OrderConfigs( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "LoadSM1OrderConfigs",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSM1OrderConfigs( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "LoadSM1OrderConfigs",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSM1OrderConfigHeads( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "LoadSM1OrderConfigHeads",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSM1OrderConfigHeads( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "LoadSM1OrderConfigHeads",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Create a new document
        /// </summary>
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        /// <returns />
        public virtual void CreateNewSM1OrderConfig(SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "CreateNewSM1OrderConfig",
                new object[] { sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document head
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveSM1OrderConfigHead(SM1OrderConfig rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "SaveSM1OrderConfigHead",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveSM1OrderConfig(SM1OrderConfig rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "SaveSM1OrderConfig",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// delete a document
        /// </summary>
        /// <param name="codconfig">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void DeleteSM1OrderConfig(string codconfig,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "DeleteSM1OrderConfig",
                new object[] { codconfig, sc },
                disp,
                target);
        }

        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="codconfig">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void UnlockSM1OrderConfig(string codconfig,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "UnlockSM1OrderConfig",
                new object[] { codconfig, sc },
                disp,
                target);
        }

        #region Overrides


        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void UnlockDocument(DocumentObject document, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SM1OrderConfig doc = document as SM1OrderConfig;
            UnlockSM1OrderConfig(
                doc.CODCONFIG
                ,sc,disp,target);
        }

        /// <summary>
        /// save a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="keepLocked">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void SaveDocument(DocumentObject document,bool keepLocked, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SaveSM1OrderConfig((SM1OrderConfig)document,keepLocked,sc,disp,target);
        }

        #endregion


        #region Snapshots


        /// <summary>
        /// Save a snapshot of the input document. Version is auto-incremented
        /// by the system.
        /// </summary>
        /// <param name="bo" />
        /// <param name="description" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void AddVersion(SM1OrderConfig bo, string description, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "AddVersion",
                new object[] { bo,description, sc },
                disp,
                target);
        }

        /// <summary>
        ///  Retreive the document with the specified version
        /// </summary>
        /// <param name="connection" />
        /// <param name="documentKey" />
        /// <param name="uniqueKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetVersionByDocumentKey(string documentKey, string uniqueKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "GetVersionByDocumentKey",
                new object[] { documentKey,uniqueKey, sc },
                disp,
                target);
        }

        /// <summary>
        /// Returns the document history. The collection will not
        /// contain the actual snapshot object (the saved xml string).
        /// If you need a specific version, call <code>GetVersion</code> method
        /// </summary>
        /// <param name="documentKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetDocumentHistoryByDocumentKey(String documentKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SM1OrderConfigEngineSLStub", "GetDocumentHistoryByDocumentKey",
                new object[] { documentKey, sc },
                disp,
                target);
        }

        #endregion


        #region Extra methods


        #endregion

    }

    ///<summary>
    /// Engine for document SM1OrderConfig
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    public partial class SM1OrderConfigEngine : SM1OrderConfigEngineBase
    {
    }

#endregion


#region Expense


    /// <summary>
    /// Customizer interface
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1040:AvoidEmptyInterfaces")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public partial interface IExpenseEngineCustomizer
    {
    }

    ///<summary>
    /// Engine per la gestione del documento Expense
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public abstract class ExpenseEngineBase : BusinessDocumentEngine
    {

        #region Customizer Access


        /// <summary>
        /// Customizer reference
        /// </summary>
        private IExpenseEngineCustomizer m_engineCustomizer;

        /// <summary>
        /// Customizer reference
        /// </summary>
        public IExpenseEngineCustomizer Customizer
        {
            get { return m_engineCustomizer; }
        }

        #endregion


        #region Constructors


        /// <summary>
        /// Default constructor
        /// </summary>
        public ExpenseEngineBase()
        {
            m_engineCustomizer = GetCustomizer<IExpenseEngineCustomizer>("ExpenseEngineCustomizer");
        }

        #endregion


        /// <summary>
        /// Check if document exist
        /// </summary>
        /// <param name="idexpense">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CheckExpenseExist(string idexpense,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "CheckExpenseExist",
                new object[] { idexpense, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document head
        /// </summary>
        /// <param name="idexpense">Chiave 1</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadExpenseHead(string idexpense,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "LoadExpenseHead",
                new object[] { idexpense, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document
        /// </summary>
        /// <param name="idexpense">Chiave 1</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadExpense(string idexpense,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "LoadExpense",
                new object[] { idexpense, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadExpenses( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "LoadExpenses",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadExpenses( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "LoadExpenses",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadExpenseHeads( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "LoadExpenseHeads",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadExpenseHeads( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "LoadExpenseHeads",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Create a new document
        /// </summary>
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        /// <returns />
        public virtual void CreateNewExpense(SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "CreateNewExpense",
                new object[] { sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document head
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveExpenseHead(Expense rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "SaveExpenseHead",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveExpense(Expense rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "SaveExpense",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// delete a document
        /// </summary>
        /// <param name="idexpense">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void DeleteExpense(string idexpense,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "DeleteExpense",
                new object[] { idexpense, sc },
                disp,
                target);
        }

        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="idexpense">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void UnlockExpense(string idexpense,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "UnlockExpense",
                new object[] { idexpense, sc },
                disp,
                target);
        }

        #region Overrides


        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void UnlockDocument(DocumentObject document, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            Expense doc = document as Expense;
            UnlockExpense(
                doc.IDEXPENSE
                ,sc,disp,target);
        }

        /// <summary>
        /// save a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="keepLocked">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void SaveDocument(DocumentObject document,bool keepLocked, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SaveExpense((Expense)document,keepLocked,sc,disp,target);
        }

        #endregion


        #region Snapshots


        /// <summary>
        /// Save a snapshot of the input document. Version is auto-incremented
        /// by the system.
        /// </summary>
        /// <param name="bo" />
        /// <param name="description" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void AddVersion(Expense bo, string description, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "AddVersion",
                new object[] { bo,description, sc },
                disp,
                target);
        }

        /// <summary>
        ///  Retreive the document with the specified version
        /// </summary>
        /// <param name="connection" />
        /// <param name="documentKey" />
        /// <param name="uniqueKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetVersionByDocumentKey(string documentKey, string uniqueKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "GetVersionByDocumentKey",
                new object[] { documentKey,uniqueKey, sc },
                disp,
                target);
        }

        /// <summary>
        /// Returns the document history. The collection will not
        /// contain the actual snapshot object (the saved xml string).
        /// If you need a specific version, call <code>GetVersion</code> method
        /// </summary>
        /// <param name="documentKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetDocumentHistoryByDocumentKey(String documentKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ExpenseEngineSLStub", "GetDocumentHistoryByDocumentKey",
                new object[] { documentKey, sc },
                disp,
                target);
        }

        #endregion


        #region Extra methods


        #endregion

    }

    ///<summary>
    /// Engine for document Expense
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    public partial class ExpenseEngine : ExpenseEngineBase
    {
    }

#endregion


#region Claim


    /// <summary>
    /// Customizer interface
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1040:AvoidEmptyInterfaces")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public partial interface IClaimEngineCustomizer
    {
    }

    ///<summary>
    /// Engine per la gestione del documento Claim
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public abstract class ClaimEngineBase : BusinessDocumentEngine,IWorkflowEngineSupport,IAnomalyEngineSupport
    {

        #region Customizer Access


        /// <summary>
        /// Customizer reference
        /// </summary>
        private IClaimEngineCustomizer m_engineCustomizer;

        /// <summary>
        /// Customizer reference
        /// </summary>
        public IClaimEngineCustomizer Customizer
        {
            get { return m_engineCustomizer; }
        }

        #endregion


        #region Constructors


        /// <summary>
        /// Default constructor
        /// </summary>
        public ClaimEngineBase()
        {
            m_engineCustomizer = GetCustomizer<IClaimEngineCustomizer>("ClaimEngineCustomizer");
        }

        #endregion


        /// <summary>
        /// Check if document exist
        /// </summary>
        /// <param name="codclaim">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CheckClaimExist(string codclaim,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "CheckClaimExist",
                new object[] { codclaim, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document head
        /// </summary>
        /// <param name="codclaim">Chiave 1</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadClaimHead(string codclaim,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "LoadClaimHead",
                new object[] { codclaim, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document
        /// </summary>
        /// <param name="codclaim">Chiave 1</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadClaim(string codclaim,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "LoadClaim",
                new object[] { codclaim, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadClaims( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "LoadClaims",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadClaims( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "LoadClaims",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadClaimHeads( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "LoadClaimHeads",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadClaimHeads( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "LoadClaimHeads",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Create a new document
        /// </summary>
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        /// <returns />
        public virtual void CreateNewClaim(SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "CreateNewClaim",
                new object[] { sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document head
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveClaimHead(Claim rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "SaveClaimHead",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveClaim(Claim rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "SaveClaim",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// delete a document
        /// </summary>
        /// <param name="codclaim">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void DeleteClaim(string codclaim,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "DeleteClaim",
                new object[] { codclaim, sc },
                disp,
                target);
        }

        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="codclaim">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void UnlockClaim(string codclaim,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "UnlockClaim",
                new object[] { codclaim, sc },
                disp,
                target);
        }

        #region Overrides


        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void UnlockDocument(DocumentObject document, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            Claim doc = document as Claim;
            UnlockClaim(
                doc.CODCLAIM
                ,sc,disp,target);
        }

        /// <summary>
        /// save a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="keepLocked">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void SaveDocument(DocumentObject document,bool keepLocked, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SaveClaim((Claim)document,keepLocked,sc,disp,target);
        }

        #endregion


        #region Snapshots


        /// <summary>
        /// Save a snapshot of the input document. Version is auto-incremented
        /// by the system.
        /// </summary>
        /// <param name="bo" />
        /// <param name="description" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void AddVersion(Claim bo, string description, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "AddVersion",
                new object[] { bo,description, sc },
                disp,
                target);
        }

        /// <summary>
        ///  Retreive the document with the specified version
        /// </summary>
        /// <param name="connection" />
        /// <param name="documentKey" />
        /// <param name="uniqueKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetVersionByDocumentKey(string documentKey, string uniqueKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "GetVersionByDocumentKey",
                new object[] { documentKey,uniqueKey, sc },
                disp,
                target);
        }

        /// <summary>
        /// Returns the document history. The collection will not
        /// contain the actual snapshot object (the saved xml string).
        /// If you need a specific version, call <code>GetVersion</code> method
        /// </summary>
        /// <param name="documentKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetDocumentHistoryByDocumentKey(String documentKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "GetDocumentHistoryByDocumentKey",
                new object[] { documentKey, sc },
                disp,
                target);
        }

        #endregion


        #region Extra methods


        #endregion


        #region IAnomalyEngineSupport


        /// <summary>
        /// CreateAnomalyReport
        /// </summary>
        /// <param name="rootObj" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        public void CreateAnomalyReport(DocumentObject rootObj, AnomalyEvalEnvironment env, SessionContext sc, Dispatcher disp, AsyncDataReceiver target)
        {
            CreateAnomalyReport((Claim)rootObj, env, sc, disp, target);
        }

        /// <summary>
        /// EvalAnomalies generic method
        /// </summary>
        /// <param name="rootObj" />
        /// <param name="operation" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        public void EvalAnomalies(DocumentObject rootObj, string operation, AnomalyEvalEnvironment env, SessionContext sc, Dispatcher disp, AsyncDataReceiver target)
        {
            EvalAnomalies((Claim) rootObj,  operation,  env,  sc,  disp,  target);
        }

        #endregion


        #region Anomalies support


        /// <summary>
        /// CreateAnomalyReport
        /// </summary>
        /// <param name="rootObj" />
        /// <param name="operation" />
        /// <param name="env" />
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CreateAnomalyReport(Claim doc, AnomalyEvalEnvironment env, SessionContext sc, Dispatcher disp, AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "CreateAnomalyReport",
                new object[] { doc, env, sc },
                disp,
                target);
        }

        /// <summary>
        /// EvalAnomalies
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="operation" />
        /// <param name="env" />
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void EvalAnomalies(Claim rootObj,string operation,AnomalyEvalEnvironment env,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "EvalAnomalies",
                new object[] { rootObj,operation,env, sc },
                disp,
                target);
        }

        #endregion


        #region Workflow support


        #region IWorkflowEngineSupport


        /// <summary>
        /// ChangeState
        /// </summary>
        /// <param name="doc" />
        /// <param name="transition" />
        /// <param name="env" />
        /// <param name="comment" />
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        public void ChangeState(DocumentObject doc, WFTransition transition, WFEnvironment env, string comment, SessionContext sc,Dispatcher disp, AsyncDataReceiver target)
        {
            ChangeState((Claim) doc,  transition,  env,  comment,  sc, disp,  target);
        }

        /// <summary>
        /// GetAvailableTransitions
        /// </summary>
        /// <param name="doc" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        public virtual void GetAvailableTransitions(DocumentObject doc, WFEnvironment env, SessionContext sc, Dispatcher disp, AsyncDataReceiver target)
        {
            GetAvailableTransitions((Claim) doc,  env,  sc,  disp,  target);
        }

        #endregion


        /// <summary>
        /// ChangeState
        /// </summary>
        /// <param name="doc" />
        /// <param name="transition" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp">Dispatcher for executing action after method completion</param>
        /// <param name="target">Codice da eseguire al termine della chiamata</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public void ChangeState(Claim doc, WFTransition transition, WFEnvironment env, string comment, SessionContext sc,
                Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "ChangeState",
                new object[] { doc,transition,env,comment, sc },
                disp,
                target);
        }

        /// <summary>
        /// CheckTransition
        /// </summary>
        /// <param name="doc" />
        /// <param name="transition" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp">Dispatcher for executing action after method completion</param>
        /// <param name="target">Codice da eseguire al termine della chiamata</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public void CheckTransition(Claim doc, WFTransition transition, WFEnvironment env, SessionContext sc
            ,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "CheckTransition",
                new object[] { doc,transition,env, sc },
                disp,
                target);
        }

        /// <summary>
        /// Get all transition available from actual state
        /// </summary>
        /// <param name="doc" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp">Dispatcher for executing action after method completion</param>
        /// <param name="target">Action after method completion</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public virtual void GetAvailableTransitions(Claim doc, WFEnvironment env, SessionContext sc
            ,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "GetAvailableTransitions",
                new object[] { doc,env, sc },
                disp,
                target);
        }

        /// <summary>
        /// Prepare environment for model selection
        /// </summary>
        /// <param name="doc" />
        /// <param name="sc" />
        /// <param name="disp">Dispatcher for executing action after method completion</param>
        /// <param name="target">Action after method completion</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public void CreateEnvForChangeStatus(Claim doc, SessionContext sc
            ,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "CreateEnvForChangeStatus",
                new object[] { doc, sc },
                disp,
                target);
        }

        /// <summary>
        /// InitWorkflow
        /// </summary>
        /// <param name="doc" />
        /// <param name="sc" />
        /// <param name="disp">Dispatcher for executing action after method completion</param>
        /// <param name="target">Action after method completion</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public void InitWorkflow(Claim doc, SessionContext sc
            ,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "InitWorkflow",
                new object[] { doc, sc },
                disp,
                target);
        }

        /// <summary>
        /// Prepare environment for model selection
        /// </summary>
        /// <param name="doc" />
        /// <param name="sc" />
        /// <param name="disp">Dispatcher for executing action after method completion</param>
        /// <param name="target">Action after method completion</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public void CreateEnvForModelChoose(Claim doc, SessionContext sc
            ,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "CreateEnvForModelChoose",
                new object[] { doc, sc },
                disp,
                target);
        }

        /// <summary>
        /// Choose the correct model for a specific document
        /// </summary>
        /// <param name="connection" />
        /// <param name="doc" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp">Dispatcher for executing action after method completion</param>
        /// <param name="target">Action after method completion</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public void ModelForDocument(DocumentObject doc, ConstraintsEvalEnv env, SessionContext sc
            ,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ClaimEngineSLStub", "ModelForDocument",
                new object[] { doc,env, sc },
                disp,
                target);
        }

        #endregion

    }

    ///<summary>
    /// Engine for document Claim
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    public partial class ClaimEngine : ClaimEngineBase
    {
    }

#endregion


#region Invoice


    /// <summary>
    /// Customizer interface
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1040:AvoidEmptyInterfaces")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public partial interface IInvoiceEngineCustomizer
    {
    }

    ///<summary>
    /// Engine per la gestione del documento Invoice
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public abstract class InvoiceEngineBase : BusinessDocumentEngine
    {

        #region Customizer Access


        /// <summary>
        /// Customizer reference
        /// </summary>
        private IInvoiceEngineCustomizer m_engineCustomizer;

        /// <summary>
        /// Customizer reference
        /// </summary>
        public IInvoiceEngineCustomizer Customizer
        {
            get { return m_engineCustomizer; }
        }

        #endregion


        #region Constructors


        /// <summary>
        /// Default constructor
        /// </summary>
        public InvoiceEngineBase()
        {
            m_engineCustomizer = GetCustomizer<IInvoiceEngineCustomizer>("InvoiceEngineCustomizer");
        }

        #endregion


        /// <summary>
        /// Check if document exist
        /// </summary>
        /// <param name="numord">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="numrow">Chiave 3</param>
        /// <param name="codtypord">Chiave 4</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CheckInvoiceExist(long numord,string coddiv,int numrow,string codtypord,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "CheckInvoiceExist",
                new object[] { numord,coddiv,numrow,codtypord, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document head
        /// </summary>
        /// <param name="numord">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="numrow">Chiave 3</param>
        /// <param name="codtypord">Chiave 4</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadInvoiceHead(long numord,string coddiv,int numrow,string codtypord,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "LoadInvoiceHead",
                new object[] { numord,coddiv,numrow,codtypord, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document
        /// </summary>
        /// <param name="numord">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="numrow">Chiave 3</param>
        /// <param name="codtypord">Chiave 4</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadInvoice(long numord,string coddiv,int numrow,string codtypord,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "LoadInvoice",
                new object[] { numord,coddiv,numrow,codtypord, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadInvoices( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "LoadInvoices",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadInvoices( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "LoadInvoices",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadInvoiceHeads( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "LoadInvoiceHeads",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadInvoiceHeads( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "LoadInvoiceHeads",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Create a new document
        /// </summary>
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        /// <returns />
        public virtual void CreateNewInvoice(SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "CreateNewInvoice",
                new object[] { sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document head
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveInvoiceHead(Invoice rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "SaveInvoiceHead",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveInvoice(Invoice rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "SaveInvoice",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// delete a document
        /// </summary>
        /// <param name="numord">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="numrow">Chiave 3</param>
        /// <param name="codtypord">Chiave 4</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void DeleteInvoice(long numord,string coddiv,int numrow,string codtypord,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "DeleteInvoice",
                new object[] { numord,coddiv,numrow,codtypord, sc },
                disp,
                target);
        }

        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="numord">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="numrow">Chiave 3</param>
        /// <param name="codtypord">Chiave 4</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void UnlockInvoice(long numord,string coddiv,int numrow,string codtypord,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "UnlockInvoice",
                new object[] { numord,coddiv,numrow,codtypord, sc },
                disp,
                target);
        }

        #region Overrides


        /// <summary>
        /// save a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="keepLocked">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void SaveDocument(DocumentObject document,bool keepLocked, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SaveInvoice((Invoice)document,keepLocked,sc,disp,target);
        }

        #endregion


        #region Snapshots


        /// <summary>
        /// Save a snapshot of the input document. Version is auto-incremented
        /// by the system.
        /// </summary>
        /// <param name="bo" />
        /// <param name="description" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void AddVersion(Invoice bo, string description, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "AddVersion",
                new object[] { bo,description, sc },
                disp,
                target);
        }

        /// <summary>
        ///  Retreive the document with the specified version
        /// </summary>
        /// <param name="connection" />
        /// <param name="documentKey" />
        /// <param name="uniqueKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetVersionByDocumentKey(string documentKey, string uniqueKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "GetVersionByDocumentKey",
                new object[] { documentKey,uniqueKey, sc },
                disp,
                target);
        }

        /// <summary>
        /// Returns the document history. The collection will not
        /// contain the actual snapshot object (the saved xml string).
        /// If you need a specific version, call <code>GetVersion</code> method
        /// </summary>
        /// <param name="documentKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetDocumentHistoryByDocumentKey(String documentKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.InvoiceEngineSLStub", "GetDocumentHistoryByDocumentKey",
                new object[] { documentKey, sc },
                disp,
                target);
        }

        #endregion


        #region Extra methods


        #endregion

    }

    ///<summary>
    /// Engine for document Invoice
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    public partial class InvoiceEngine : InvoiceEngineBase
    {
    }

#endregion


#region PrevOrderInfo


    /// <summary>
    /// Customizer interface
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1040:AvoidEmptyInterfaces")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public partial interface IPrevOrderInfoEngineCustomizer
    {
    }

    ///<summary>
    /// Engine per la gestione del documento PrevOrderInfo
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public abstract class PrevOrderInfoEngineBase : BusinessDocumentEngine
    {

        #region Customizer Access


        /// <summary>
        /// Customizer reference
        /// </summary>
        private IPrevOrderInfoEngineCustomizer m_engineCustomizer;

        /// <summary>
        /// Customizer reference
        /// </summary>
        public IPrevOrderInfoEngineCustomizer Customizer
        {
            get { return m_engineCustomizer; }
        }

        #endregion


        #region Constructors


        /// <summary>
        /// Default constructor
        /// </summary>
        public PrevOrderInfoEngineBase()
        {
            m_engineCustomizer = GetCustomizer<IPrevOrderInfoEngineCustomizer>("PrevOrderInfoEngineCustomizer");
        }

        #endregion


        /// <summary>
        /// Check if document exist
        /// </summary>
        /// <param name="ideval">Chiave 1</param>
        /// <param name="codtypord">Chiave 2</param>
        /// <param name="codlocation">Chiave 3</param>
        /// <param name="codart">Chiave 4</param>
        /// <param name="coddiv">Chiave 5</param>
        /// <param name="codtyprow">Chiave 6</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CheckPrevOrderInfoExist(int ideval,string codtypord,string codlocation,string codart,string coddiv,string codtyprow,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PrevOrderInfoEngineSLStub", "CheckPrevOrderInfoExist",
                new object[] { ideval,codtypord,codlocation,codart,coddiv,codtyprow, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document head
        /// </summary>
        /// <param name="ideval">Chiave 1</param>
        /// <param name="codtypord">Chiave 2</param>
        /// <param name="codlocation">Chiave 3</param>
        /// <param name="codart">Chiave 4</param>
        /// <param name="coddiv">Chiave 5</param>
        /// <param name="codtyprow">Chiave 6</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadPrevOrderInfoHead(int ideval,string codtypord,string codlocation,string codart,string coddiv,string codtyprow,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PrevOrderInfoEngineSLStub", "LoadPrevOrderInfoHead",
                new object[] { ideval,codtypord,codlocation,codart,coddiv,codtyprow, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document
        /// </summary>
        /// <param name="ideval">Chiave 1</param>
        /// <param name="codtypord">Chiave 2</param>
        /// <param name="codlocation">Chiave 3</param>
        /// <param name="codart">Chiave 4</param>
        /// <param name="coddiv">Chiave 5</param>
        /// <param name="codtyprow">Chiave 6</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadPrevOrderInfo(int ideval,string codtypord,string codlocation,string codart,string coddiv,string codtyprow,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PrevOrderInfoEngineSLStub", "LoadPrevOrderInfo",
                new object[] { ideval,codtypord,codlocation,codart,coddiv,codtyprow, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadPrevOrderInfos( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PrevOrderInfoEngineSLStub", "LoadPrevOrderInfos",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadPrevOrderInfos( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PrevOrderInfoEngineSLStub", "LoadPrevOrderInfos",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadPrevOrderInfoHeads( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PrevOrderInfoEngineSLStub", "LoadPrevOrderInfoHeads",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadPrevOrderInfoHeads( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PrevOrderInfoEngineSLStub", "LoadPrevOrderInfoHeads",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Create a new document
        /// </summary>
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        /// <returns />
        public virtual void CreateNewPrevOrderInfo(SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PrevOrderInfoEngineSLStub", "CreateNewPrevOrderInfo",
                new object[] { sc },
                disp,
                target);
        }

        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="ideval">Chiave 1</param>
        /// <param name="codtypord">Chiave 2</param>
        /// <param name="codlocation">Chiave 3</param>
        /// <param name="codart">Chiave 4</param>
        /// <param name="coddiv">Chiave 5</param>
        /// <param name="codtyprow">Chiave 6</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void UnlockPrevOrderInfo(int ideval,string codtypord,string codlocation,string codart,string coddiv,string codtyprow,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PrevOrderInfoEngineSLStub", "UnlockPrevOrderInfo",
                new object[] { ideval,codtypord,codlocation,codart,coddiv,codtyprow, sc },
                disp,
                target);
        }

        #region Overrides


        #endregion


        #region Snapshots


        /// <summary>
        /// Save a snapshot of the input document. Version is auto-incremented
        /// by the system.
        /// </summary>
        /// <param name="bo" />
        /// <param name="description" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void AddVersion(PrevOrderInfo bo, string description, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PrevOrderInfoEngineSLStub", "AddVersion",
                new object[] { bo,description, sc },
                disp,
                target);
        }

        /// <summary>
        ///  Retreive the document with the specified version
        /// </summary>
        /// <param name="connection" />
        /// <param name="documentKey" />
        /// <param name="uniqueKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetVersionByDocumentKey(string documentKey, string uniqueKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PrevOrderInfoEngineSLStub", "GetVersionByDocumentKey",
                new object[] { documentKey,uniqueKey, sc },
                disp,
                target);
        }

        /// <summary>
        /// Returns the document history. The collection will not
        /// contain the actual snapshot object (the saved xml string).
        /// If you need a specific version, call <code>GetVersion</code> method
        /// </summary>
        /// <param name="documentKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetDocumentHistoryByDocumentKey(String documentKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PrevOrderInfoEngineSLStub", "GetDocumentHistoryByDocumentKey",
                new object[] { documentKey, sc },
                disp,
                target);
        }

        #endregion


        #region Extra methods


        ///<summary>
        /// Retreive information about articles previously ordered
        ///</summary>
        ///<param name="CodDiv">Division</param>
        ///<param name="CodParty">Customer code</param>
        ///<param name="CodCustSale">Pdv Code</param>
        ///<param name="DteOrd">Order Date</param>
        ///<param name="sc">Contesto utente SM1</param>
        ///<param name="disp">Dispatcher per l'esecuzione del codice al termine della chiamata</param>
        ///<param name="target">Codice da eseguire al termine della chiamata</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public virtual void CalculatePrevOrderDetails(
            string CodDiv,
            string CodParty,
            string CodCustSale,
            DateTime DteOrd,
            SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PrevOrderInfoEngineSLStub", "CalculatePrevOrderDetails",
                new SilverlightRequestSettings() {  },
                new object[] {
                    CodDiv,
                    CodParty,
                    CodCustSale,
                    DteOrd,
                    sc },
                disp,
                target);
        }

        #endregion

    }

    ///<summary>
    /// Engine for document PrevOrderInfo
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    public partial class PrevOrderInfoEngine : PrevOrderInfoEngineBase
    {
    }

#endregion


#region Canvass


    /// <summary>
    /// Customizer interface
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1040:AvoidEmptyInterfaces")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public partial interface ICanvassEngineCustomizer
    {
    }

    ///<summary>
    /// Engine per la gestione del documento Canvass
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public abstract class CanvassEngineBase : BusinessDocumentEngine
    {

        #region Customizer Access


        /// <summary>
        /// Customizer reference
        /// </summary>
        private ICanvassEngineCustomizer m_engineCustomizer;

        /// <summary>
        /// Customizer reference
        /// </summary>
        public ICanvassEngineCustomizer Customizer
        {
            get { return m_engineCustomizer; }
        }

        #endregion


        #region Constructors


        /// <summary>
        /// Default constructor
        /// </summary>
        public CanvassEngineBase()
        {
            m_engineCustomizer = GetCustomizer<ICanvassEngineCustomizer>("CanvassEngineCustomizer");
        }

        #endregion


        /// <summary>
        /// Check if document exist
        /// </summary>
        /// <param name="idcnv">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CheckCanvassExist(int idcnv,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "CheckCanvassExist",
                new object[] { idcnv, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document head
        /// </summary>
        /// <param name="idcnv">Chiave 1</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadCanvassHead(int idcnv,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "LoadCanvassHead",
                new object[] { idcnv, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document
        /// </summary>
        /// <param name="idcnv">Chiave 1</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadCanvass(int idcnv,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "LoadCanvass",
                new object[] { idcnv, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadCanvasss( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "LoadCanvasss",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadCanvasss( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "LoadCanvasss",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadCanvassHeads( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "LoadCanvassHeads",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadCanvassHeads( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "LoadCanvassHeads",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Create a new document
        /// </summary>
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        /// <returns />
        public virtual void CreateNewCanvass(SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "CreateNewCanvass",
                new object[] { sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document head
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveCanvassHead(Canvass rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "SaveCanvassHead",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveCanvass(Canvass rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "SaveCanvass",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// delete a document
        /// </summary>
        /// <param name="idcnv">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void DeleteCanvass(int idcnv,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "DeleteCanvass",
                new object[] { idcnv, sc },
                disp,
                target);
        }

        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="idcnv">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void UnlockCanvass(int idcnv,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "UnlockCanvass",
                new object[] { idcnv, sc },
                disp,
                target);
        }

        #region Overrides


        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void UnlockDocument(DocumentObject document, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            Canvass doc = document as Canvass;
            UnlockCanvass(
                doc.IDCNV
                ,sc,disp,target);
        }

        /// <summary>
        /// save a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="keepLocked">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void SaveDocument(DocumentObject document,bool keepLocked, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SaveCanvass((Canvass)document,keepLocked,sc,disp,target);
        }

        #endregion


        #region Snapshots


        /// <summary>
        /// Save a snapshot of the input document. Version is auto-incremented
        /// by the system.
        /// </summary>
        /// <param name="bo" />
        /// <param name="description" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void AddVersion(Canvass bo, string description, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "AddVersion",
                new object[] { bo,description, sc },
                disp,
                target);
        }

        /// <summary>
        ///  Retreive the document with the specified version
        /// </summary>
        /// <param name="connection" />
        /// <param name="documentKey" />
        /// <param name="uniqueKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetVersionByDocumentKey(string documentKey, string uniqueKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "GetVersionByDocumentKey",
                new object[] { documentKey,uniqueKey, sc },
                disp,
                target);
        }

        /// <summary>
        /// Returns the document history. The collection will not
        /// contain the actual snapshot object (the saved xml string).
        /// If you need a specific version, call <code>GetVersion</code> method
        /// </summary>
        /// <param name="documentKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetDocumentHistoryByDocumentKey(String documentKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CanvassEngineSLStub", "GetDocumentHistoryByDocumentKey",
                new object[] { documentKey, sc },
                disp,
                target);
        }

        #endregion


        #region Extra methods


        #endregion

    }

    ///<summary>
    /// Engine for document Canvass
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    public partial class CanvassEngine : CanvassEngineBase
    {
    }

#endregion


#region CnvAction


    /// <summary>
    /// Customizer interface
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1040:AvoidEmptyInterfaces")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public partial interface ICnvActionEngineCustomizer
    {
    }

    ///<summary>
    /// Engine per la gestione del documento CnvAction
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public abstract class CnvActionEngineBase : BusinessDocumentEngine
    {

        #region Customizer Access


        /// <summary>
        /// Customizer reference
        /// </summary>
        private ICnvActionEngineCustomizer m_engineCustomizer;

        /// <summary>
        /// Customizer reference
        /// </summary>
        public ICnvActionEngineCustomizer Customizer
        {
            get { return m_engineCustomizer; }
        }

        #endregion


        #region Constructors


        /// <summary>
        /// Default constructor
        /// </summary>
        public CnvActionEngineBase()
        {
            m_engineCustomizer = GetCustomizer<ICnvActionEngineCustomizer>("CnvActionEngineCustomizer");
        }

        #endregion


        /// <summary>
        /// Check if document exist
        /// </summary>
        /// <param name="idcnv">Chiave 1</param>
        /// <param name="codcnvact">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CheckCnvActionExist(int idcnv,string codcnvact,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "CheckCnvActionExist",
                new object[] { idcnv,codcnvact, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document head
        /// </summary>
        /// <param name="idcnv">Chiave 1</param>
        /// <param name="codcnvact">Chiave 2</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadCnvActionHead(int idcnv,string codcnvact,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "LoadCnvActionHead",
                new object[] { idcnv,codcnvact, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document
        /// </summary>
        /// <param name="idcnv">Chiave 1</param>
        /// <param name="codcnvact">Chiave 2</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadCnvAction(int idcnv,string codcnvact,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "LoadCnvAction",
                new object[] { idcnv,codcnvact, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadCnvActions( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "LoadCnvActions",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadCnvActions( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "LoadCnvActions",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadCnvActionHeads( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "LoadCnvActionHeads",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadCnvActionHeads( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "LoadCnvActionHeads",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Create a new document
        /// </summary>
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        /// <returns />
        public virtual void CreateNewCnvAction(SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "CreateNewCnvAction",
                new object[] { sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document head
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveCnvActionHead(CnvAction rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "SaveCnvActionHead",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveCnvAction(CnvAction rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "SaveCnvAction",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// delete a document
        /// </summary>
        /// <param name="idcnv">Chiave 1</param>
        /// <param name="codcnvact">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void DeleteCnvAction(int idcnv,string codcnvact,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "DeleteCnvAction",
                new object[] { idcnv,codcnvact, sc },
                disp,
                target);
        }

        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="idcnv">Chiave 1</param>
        /// <param name="codcnvact">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void UnlockCnvAction(int idcnv,string codcnvact,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "UnlockCnvAction",
                new object[] { idcnv,codcnvact, sc },
                disp,
                target);
        }

        #region Overrides


        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void UnlockDocument(DocumentObject document, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            CnvAction doc = document as CnvAction;
            UnlockCnvAction(
                doc.IDCNV,
                doc.CODCNVACT
                ,sc,disp,target);
        }

        /// <summary>
        /// save a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="keepLocked">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void SaveDocument(DocumentObject document,bool keepLocked, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SaveCnvAction((CnvAction)document,keepLocked,sc,disp,target);
        }

        #endregion


        #region Snapshots


        /// <summary>
        /// Save a snapshot of the input document. Version is auto-incremented
        /// by the system.
        /// </summary>
        /// <param name="bo" />
        /// <param name="description" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void AddVersion(CnvAction bo, string description, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "AddVersion",
                new object[] { bo,description, sc },
                disp,
                target);
        }

        /// <summary>
        ///  Retreive the document with the specified version
        /// </summary>
        /// <param name="connection" />
        /// <param name="documentKey" />
        /// <param name="uniqueKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetVersionByDocumentKey(string documentKey, string uniqueKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "GetVersionByDocumentKey",
                new object[] { documentKey,uniqueKey, sc },
                disp,
                target);
        }

        /// <summary>
        /// Returns the document history. The collection will not
        /// contain the actual snapshot object (the saved xml string).
        /// If you need a specific version, call <code>GetVersion</code> method
        /// </summary>
        /// <param name="documentKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetDocumentHistoryByDocumentKey(String documentKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.CnvActionEngineSLStub", "GetDocumentHistoryByDocumentKey",
                new object[] { documentKey, sc },
                disp,
                target);
        }

        #endregion


        #region Extra methods


        #endregion

    }

    ///<summary>
    /// Engine for document CnvAction
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    public partial class CnvActionEngine : CnvActionEngineBase
    {
    }

#endregion


#region FilteredDeliveryPoints


    /// <summary>
    /// Customizer interface
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1040:AvoidEmptyInterfaces")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public partial interface IFilteredDeliveryPointsEngineCustomizer
    {
    }

    ///<summary>
    /// Engine per la gestione del documento FilteredDeliveryPoints
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public abstract class FilteredDeliveryPointsEngineBase : BusinessDocumentEngine
    {

        #region Customizer Access


        /// <summary>
        /// Customizer reference
        /// </summary>
        private IFilteredDeliveryPointsEngineCustomizer m_engineCustomizer;

        /// <summary>
        /// Customizer reference
        /// </summary>
        public IFilteredDeliveryPointsEngineCustomizer Customizer
        {
            get { return m_engineCustomizer; }
        }

        #endregion


        #region Constructors


        /// <summary>
        /// Default constructor
        /// </summary>
        public FilteredDeliveryPointsEngineBase()
        {
            m_engineCustomizer = GetCustomizer<IFilteredDeliveryPointsEngineCustomizer>("FilteredDeliveryPointsEngineCustomizer");
        }

        #endregion


        /// <summary>
        /// Check if document exist
        /// </summary>
        /// <param name="idaction">Chiave 1</param>
        /// <param name="coddeliverypoint">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CheckFilteredDeliveryPointsExist(string idaction,string coddeliverypoint,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "CheckFilteredDeliveryPointsExist",
                new object[] { idaction,coddeliverypoint, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document head
        /// </summary>
        /// <param name="idaction">Chiave 1</param>
        /// <param name="coddeliverypoint">Chiave 2</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadFilteredDeliveryPointsHead(string idaction,string coddeliverypoint,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "LoadFilteredDeliveryPointsHead",
                new object[] { idaction,coddeliverypoint, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document
        /// </summary>
        /// <param name="idaction">Chiave 1</param>
        /// <param name="coddeliverypoint">Chiave 2</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadFilteredDeliveryPoints(string idaction,string coddeliverypoint,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "LoadFilteredDeliveryPoints",
                new object[] { idaction,coddeliverypoint, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadFilteredDeliveryPointss( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "LoadFilteredDeliveryPointss",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadFilteredDeliveryPointss( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "LoadFilteredDeliveryPointss",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadFilteredDeliveryPointsHeads( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "LoadFilteredDeliveryPointsHeads",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadFilteredDeliveryPointsHeads( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "LoadFilteredDeliveryPointsHeads",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Create a new document
        /// </summary>
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        /// <returns />
        public virtual void CreateNewFilteredDeliveryPoints(SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "CreateNewFilteredDeliveryPoints",
                new object[] { sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document head
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveFilteredDeliveryPointsHead(FilteredDeliveryPoints rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "SaveFilteredDeliveryPointsHead",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveFilteredDeliveryPoints(FilteredDeliveryPoints rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "SaveFilteredDeliveryPoints",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// delete a document
        /// </summary>
        /// <param name="idaction">Chiave 1</param>
        /// <param name="coddeliverypoint">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void DeleteFilteredDeliveryPoints(string idaction,string coddeliverypoint,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "DeleteFilteredDeliveryPoints",
                new object[] { idaction,coddeliverypoint, sc },
                disp,
                target);
        }

        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="idaction">Chiave 1</param>
        /// <param name="coddeliverypoint">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void UnlockFilteredDeliveryPoints(string idaction,string coddeliverypoint,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "UnlockFilteredDeliveryPoints",
                new object[] { idaction,coddeliverypoint, sc },
                disp,
                target);
        }

        #region Overrides


        /// <summary>
        /// save a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="keepLocked">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void SaveDocument(DocumentObject document,bool keepLocked, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SaveFilteredDeliveryPoints((FilteredDeliveryPoints)document,keepLocked,sc,disp,target);
        }

        #endregion


        #region Snapshots


        /// <summary>
        /// Save a snapshot of the input document. Version is auto-incremented
        /// by the system.
        /// </summary>
        /// <param name="bo" />
        /// <param name="description" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void AddVersion(FilteredDeliveryPoints bo, string description, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "AddVersion",
                new object[] { bo,description, sc },
                disp,
                target);
        }

        /// <summary>
        ///  Retreive the document with the specified version
        /// </summary>
        /// <param name="connection" />
        /// <param name="documentKey" />
        /// <param name="uniqueKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetVersionByDocumentKey(string documentKey, string uniqueKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "GetVersionByDocumentKey",
                new object[] { documentKey,uniqueKey, sc },
                disp,
                target);
        }

        /// <summary>
        /// Returns the document history. The collection will not
        /// contain the actual snapshot object (the saved xml string).
        /// If you need a specific version, call <code>GetVersion</code> method
        /// </summary>
        /// <param name="documentKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetDocumentHistoryByDocumentKey(String documentKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.FilteredDeliveryPointsEngineSLStub", "GetDocumentHistoryByDocumentKey",
                new object[] { documentKey, sc },
                disp,
                target);
        }

        #endregion


        #region Extra methods


        #endregion

    }

    ///<summary>
    /// Engine for document FilteredDeliveryPoints
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    public partial class FilteredDeliveryPointsEngine : FilteredDeliveryPointsEngineBase
    {
    }

#endregion


#region SellingDay


    /// <summary>
    /// Customizer interface
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1040:AvoidEmptyInterfaces")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public partial interface ISellingDayEngineCustomizer
    {
    }

    ///<summary>
    /// Engine per la gestione del documento SellingDay
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public abstract class SellingDayEngineBase : BusinessDocumentEngine
    {

        #region Customizer Access


        /// <summary>
        /// Customizer reference
        /// </summary>
        private ISellingDayEngineCustomizer m_engineCustomizer;

        /// <summary>
        /// Customizer reference
        /// </summary>
        public ISellingDayEngineCustomizer Customizer
        {
            get { return m_engineCustomizer; }
        }

        #endregion


        #region Constructors


        /// <summary>
        /// Default constructor
        /// </summary>
        public SellingDayEngineBase()
        {
            m_engineCustomizer = GetCustomizer<ISellingDayEngineCustomizer>("SellingDayEngineCustomizer");
        }

        #endregion


        /// <summary>
        /// Check if document exist
        /// </summary>
        /// <param name="idday">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CheckSellingDayExist(string idday,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "CheckSellingDayExist",
                new object[] { idday, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document head
        /// </summary>
        /// <param name="idday">Chiave 1</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSellingDayHead(string idday,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "LoadSellingDayHead",
                new object[] { idday, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document
        /// </summary>
        /// <param name="idday">Chiave 1</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSellingDay(string idday,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "LoadSellingDay",
                new object[] { idday, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSellingDays( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "LoadSellingDays",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSellingDays( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "LoadSellingDays",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSellingDayHeads( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "LoadSellingDayHeads",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSellingDayHeads( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "LoadSellingDayHeads",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Create a new document
        /// </summary>
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        /// <returns />
        public virtual void CreateNewSellingDay(SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "CreateNewSellingDay",
                new object[] { sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document head
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveSellingDayHead(SellingDay rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "SaveSellingDayHead",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveSellingDay(SellingDay rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "SaveSellingDay",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// delete a document
        /// </summary>
        /// <param name="idday">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void DeleteSellingDay(string idday,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "DeleteSellingDay",
                new object[] { idday, sc },
                disp,
                target);
        }

        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="idday">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void UnlockSellingDay(string idday,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "UnlockSellingDay",
                new object[] { idday, sc },
                disp,
                target);
        }

        #region Overrides


        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void UnlockDocument(DocumentObject document, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SellingDay doc = document as SellingDay;
            UnlockSellingDay(
                doc.IDDAY
                ,sc,disp,target);
        }

        /// <summary>
        /// save a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="keepLocked">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void SaveDocument(DocumentObject document,bool keepLocked, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SaveSellingDay((SellingDay)document,keepLocked,sc,disp,target);
        }

        #endregion


        #region Snapshots


        /// <summary>
        /// Save a snapshot of the input document. Version is auto-incremented
        /// by the system.
        /// </summary>
        /// <param name="bo" />
        /// <param name="description" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void AddVersion(SellingDay bo, string description, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "AddVersion",
                new object[] { bo,description, sc },
                disp,
                target);
        }

        /// <summary>
        ///  Retreive the document with the specified version
        /// </summary>
        /// <param name="connection" />
        /// <param name="documentKey" />
        /// <param name="uniqueKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetVersionByDocumentKey(string documentKey, string uniqueKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "GetVersionByDocumentKey",
                new object[] { documentKey,uniqueKey, sc },
                disp,
                target);
        }

        /// <summary>
        /// Returns the document history. The collection will not
        /// contain the actual snapshot object (the saved xml string).
        /// If you need a specific version, call <code>GetVersion</code> method
        /// </summary>
        /// <param name="documentKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetDocumentHistoryByDocumentKey(String documentKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "GetDocumentHistoryByDocumentKey",
                new object[] { documentKey, sc },
                disp,
                target);
        }

        #endregion


        #region Extra methods
        ///<summary>
        /// Do settlement for day

        ///</summary>
        ///<param name="sellingDays">List of selling days</param>
        ///<param name="sc">Contesto utente SM1</param>
        ///<param name="disp">Dispatcher per l'esecuzione del codice al termine della chiamata</param>
        ///<param name="target">Codice da eseguire al termine della chiamata</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public virtual void SettleDay(
            SellingDayCollection sellingDays,

            SessionContext sc, Dispatcher disp, AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "SettleDay",
                new SilverlightRequestSettings() { },
                new object[] {
                    sellingDays,

                    sc },
                disp,
                target);
        }

        ///<summary>
        /// Call server to calculate stock matrix for one selling day
        ///</summary>
        ///<param name="idDay">Selling day ID</param>
        ///<param name="sc">Contesto utente SM1</param>
        ///<param name="disp">Dispatcher per l'esecuzione del codice al termine della chiamata</param>
        ///<param name="target">Codice da eseguire al termine della chiamata</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public virtual void CalculateStockMatrix(
            string idDay,
            SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SellingDayEngineSLStub", "CalculateStockMatrix",
                new SilverlightRequestSettings() {  },
                new object[] {
                    idDay,
                    sc },
                disp,
                target);
        }

        #endregion

    }

    ///<summary>
    /// Engine for document SellingDay
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    public partial class SellingDayEngine : SellingDayEngineBase
    {
    }

#endregion


#region Opportunity


    /// <summary>
    /// Customizer interface
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1040:AvoidEmptyInterfaces")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public partial interface IOpportunityEngineCustomizer
    {
    }

    ///<summary>
    /// Engine per la gestione del documento Opportunity
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public abstract class OpportunityEngineBase : BusinessDocumentEngine,IWorkflowEngineSupport,IAnomalyEngineSupport
    {

        #region Customizer Access


        /// <summary>
        /// Customizer reference
        /// </summary>
        private IOpportunityEngineCustomizer m_engineCustomizer;

        /// <summary>
        /// Customizer reference
        /// </summary>
        public IOpportunityEngineCustomizer Customizer
        {
            get { return m_engineCustomizer; }
        }

        #endregion


        #region Constructors


        /// <summary>
        /// Default constructor
        /// </summary>
        public OpportunityEngineBase()
        {
            m_engineCustomizer = GetCustomizer<IOpportunityEngineCustomizer>("OpportunityEngineCustomizer");
        }

        #endregion


        /// <summary>
        /// Check if document exist
        /// </summary>
        /// <param name="codopp">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CheckOpportunityExist(string codopp,string coddiv,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "CheckOpportunityExist",
                new object[] { codopp,coddiv, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document head
        /// </summary>
        /// <param name="codopp">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadOpportunityHead(string codopp,string coddiv,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "LoadOpportunityHead",
                new object[] { codopp,coddiv, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document
        /// </summary>
        /// <param name="codopp">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadOpportunity(string codopp,string coddiv,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "LoadOpportunity",
                new object[] { codopp,coddiv, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadOpportunitys( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "LoadOpportunitys",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadOpportunitys( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "LoadOpportunitys",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadOpportunityHeads( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "LoadOpportunityHeads",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadOpportunityHeads( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "LoadOpportunityHeads",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Create a new document
        /// </summary>
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        /// <returns />
        public virtual void CreateNewOpportunity(SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "CreateNewOpportunity",
                new object[] { sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document head
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveOpportunityHead(Opportunity rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "SaveOpportunityHead",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveOpportunity(Opportunity rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "SaveOpportunity",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// delete a document
        /// </summary>
        /// <param name="codopp">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void DeleteOpportunity(string codopp,string coddiv,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "DeleteOpportunity",
                new object[] { codopp,coddiv, sc },
                disp,
                target);
        }

        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="codopp">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void UnlockOpportunity(string codopp,string coddiv,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "UnlockOpportunity",
                new object[] { codopp,coddiv, sc },
                disp,
                target);
        }

        #region Overrides


        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void UnlockDocument(DocumentObject document, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            Opportunity doc = document as Opportunity;
            UnlockOpportunity(
                doc.CODOPP,
                doc.CODDIV
                ,sc,disp,target);
        }

        /// <summary>
        /// save a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="keepLocked">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void SaveDocument(DocumentObject document,bool keepLocked, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SaveOpportunity((Opportunity)document,keepLocked,sc,disp,target);
        }

        #endregion


        #region Snapshots


        /// <summary>
        /// Save a snapshot of the input document. Version is auto-incremented
        /// by the system.
        /// </summary>
        /// <param name="bo" />
        /// <param name="description" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void AddVersion(Opportunity bo, string description, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "AddVersion",
                new object[] { bo,description, sc },
                disp,
                target);
        }

        /// <summary>
        ///  Retreive the document with the specified version
        /// </summary>
        /// <param name="connection" />
        /// <param name="documentKey" />
        /// <param name="uniqueKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetVersionByDocumentKey(string documentKey, string uniqueKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "GetVersionByDocumentKey",
                new object[] { documentKey,uniqueKey, sc },
                disp,
                target);
        }

        /// <summary>
        /// Returns the document history. The collection will not
        /// contain the actual snapshot object (the saved xml string).
        /// If you need a specific version, call <code>GetVersion</code> method
        /// </summary>
        /// <param name="documentKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetDocumentHistoryByDocumentKey(String documentKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "GetDocumentHistoryByDocumentKey",
                new object[] { documentKey, sc },
                disp,
                target);
        }

        #endregion


        #region Extra methods


        #endregion


        #region IAnomalyEngineSupport


        /// <summary>
        /// CreateAnomalyReport
        /// </summary>
        /// <param name="rootObj" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        public void CreateAnomalyReport(DocumentObject rootObj, AnomalyEvalEnvironment env, SessionContext sc, Dispatcher disp, AsyncDataReceiver target)
        {
            CreateAnomalyReport((Opportunity)rootObj, env, sc, disp, target);
        }

        /// <summary>
        /// EvalAnomalies generic method
        /// </summary>
        /// <param name="rootObj" />
        /// <param name="operation" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        public void EvalAnomalies(DocumentObject rootObj, string operation, AnomalyEvalEnvironment env, SessionContext sc, Dispatcher disp, AsyncDataReceiver target)
        {
            EvalAnomalies((Opportunity) rootObj,  operation,  env,  sc,  disp,  target);
        }

        #endregion


        #region Anomalies support


        /// <summary>
        /// CreateAnomalyReport
        /// </summary>
        /// <param name="rootObj" />
        /// <param name="operation" />
        /// <param name="env" />
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CreateAnomalyReport(Opportunity doc, AnomalyEvalEnvironment env, SessionContext sc, Dispatcher disp, AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "CreateAnomalyReport",
                new object[] { doc, env, sc },
                disp,
                target);
        }

        /// <summary>
        /// EvalAnomalies
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="operation" />
        /// <param name="env" />
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void EvalAnomalies(Opportunity rootObj,string operation,AnomalyEvalEnvironment env,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "EvalAnomalies",
                new object[] { rootObj,operation,env, sc },
                disp,
                target);
        }

        #endregion


        #region Workflow support


        #region IWorkflowEngineSupport


        /// <summary>
        /// ChangeState
        /// </summary>
        /// <param name="doc" />
        /// <param name="transition" />
        /// <param name="env" />
        /// <param name="comment" />
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        public void ChangeState(DocumentObject doc, WFTransition transition, WFEnvironment env, string comment, SessionContext sc,Dispatcher disp, AsyncDataReceiver target)
        {
            ChangeState((Opportunity) doc,  transition,  env,  comment,  sc, disp,  target);
        }

        /// <summary>
        /// GetAvailableTransitions
        /// </summary>
        /// <param name="doc" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        public virtual void GetAvailableTransitions(DocumentObject doc, WFEnvironment env, SessionContext sc, Dispatcher disp, AsyncDataReceiver target)
        {
            GetAvailableTransitions((Opportunity) doc,  env,  sc,  disp,  target);
        }

        #endregion


        /// <summary>
        /// ChangeState
        /// </summary>
        /// <param name="doc" />
        /// <param name="transition" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp">Dispatcher for executing action after method completion</param>
        /// <param name="target">Codice da eseguire al termine della chiamata</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public void ChangeState(Opportunity doc, WFTransition transition, WFEnvironment env, string comment, SessionContext sc,
                Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "ChangeState",
                new object[] { doc,transition,env,comment, sc },
                disp,
                target);
        }

        /// <summary>
        /// CheckTransition
        /// </summary>
        /// <param name="doc" />
        /// <param name="transition" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp">Dispatcher for executing action after method completion</param>
        /// <param name="target">Codice da eseguire al termine della chiamata</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public void CheckTransition(Opportunity doc, WFTransition transition, WFEnvironment env, SessionContext sc
            ,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "CheckTransition",
                new object[] { doc,transition,env, sc },
                disp,
                target);
        }

        /// <summary>
        /// Get all transition available from actual state
        /// </summary>
        /// <param name="doc" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp">Dispatcher for executing action after method completion</param>
        /// <param name="target">Action after method completion</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public virtual void GetAvailableTransitions(Opportunity doc, WFEnvironment env, SessionContext sc
            ,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "GetAvailableTransitions",
                new object[] { doc,env, sc },
                disp,
                target);
        }

        /// <summary>
        /// Prepare environment for model selection
        /// </summary>
        /// <param name="doc" />
        /// <param name="sc" />
        /// <param name="disp">Dispatcher for executing action after method completion</param>
        /// <param name="target">Action after method completion</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public void CreateEnvForChangeStatus(Opportunity doc, SessionContext sc
            ,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "CreateEnvForChangeStatus",
                new object[] { doc, sc },
                disp,
                target);
        }

        /// <summary>
        /// InitWorkflow
        /// </summary>
        /// <param name="doc" />
        /// <param name="sc" />
        /// <param name="disp">Dispatcher for executing action after method completion</param>
        /// <param name="target">Action after method completion</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public void InitWorkflow(Opportunity doc, SessionContext sc
            ,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "InitWorkflow",
                new object[] { doc, sc },
                disp,
                target);
        }

        /// <summary>
        /// Prepare environment for model selection
        /// </summary>
        /// <param name="doc" />
        /// <param name="sc" />
        /// <param name="disp">Dispatcher for executing action after method completion</param>
        /// <param name="target">Action after method completion</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public void CreateEnvForModelChoose(Opportunity doc, SessionContext sc
            ,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "CreateEnvForModelChoose",
                new object[] { doc, sc },
                disp,
                target);
        }

        /// <summary>
        /// Choose the correct model for a specific document
        /// </summary>
        /// <param name="connection" />
        /// <param name="doc" />
        /// <param name="env" />
        /// <param name="sc" />
        /// <param name="disp">Dispatcher for executing action after method completion</param>
        /// <param name="target">Action after method completion</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public void ModelForDocument(DocumentObject doc, ConstraintsEvalEnv env, SessionContext sc
            ,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.OpportunityEngineSLStub", "ModelForDocument",
                new object[] { doc,env, sc },
                disp,
                target);
        }

        #endregion

    }

    ///<summary>
    /// Engine for document Opportunity
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    public partial class OpportunityEngine : OpportunityEngineBase
    {
    }

#endregion


#region Settlement


    /// <summary>
    /// Customizer interface
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1040:AvoidEmptyInterfaces")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public partial interface ISettlementEngineCustomizer
    {
    }

    ///<summary>
    /// Engine per la gestione del documento Settlement
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public abstract class SettlementEngineBase : BusinessDocumentEngine
    {

        #region Customizer Access


        /// <summary>
        /// Customizer reference
        /// </summary>
        private ISettlementEngineCustomizer m_engineCustomizer;

        /// <summary>
        /// Customizer reference
        /// </summary>
        public ISettlementEngineCustomizer Customizer
        {
            get { return m_engineCustomizer; }
        }

        #endregion


        #region Constructors


        /// <summary>
        /// Default constructor
        /// </summary>
        public SettlementEngineBase()
        {
            m_engineCustomizer = GetCustomizer<ISettlementEngineCustomizer>("SettlementEngineCustomizer");
        }

        #endregion


        /// <summary>
        /// Check if document exist
        /// </summary>
        /// <param name="codusr">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CheckSettlementExist(string codusr,string coddiv,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "CheckSettlementExist",
                new object[] { codusr,coddiv, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document head
        /// </summary>
        /// <param name="codusr">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSettlementHead(string codusr,string coddiv,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "LoadSettlementHead",
                new object[] { codusr,coddiv, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document
        /// </summary>
        /// <param name="codusr">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSettlement(string codusr,string coddiv,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "LoadSettlement",
                new object[] { codusr,coddiv, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSettlements( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "LoadSettlements",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSettlements( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "LoadSettlements",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSettlementHeads( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "LoadSettlementHeads",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadSettlementHeads( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "LoadSettlementHeads",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Create a new document
        /// </summary>
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        /// <returns />
        public virtual void CreateNewSettlement(SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "CreateNewSettlement",
                new object[] { sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document head
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveSettlementHead(Settlement rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "SaveSettlementHead",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveSettlement(Settlement rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "SaveSettlement",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// delete a document
        /// </summary>
        /// <param name="codusr">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void DeleteSettlement(string codusr,string coddiv,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "DeleteSettlement",
                new object[] { codusr,coddiv, sc },
                disp,
                target);
        }

        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="codusr">Chiave 1</param>
        /// <param name="coddiv">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void UnlockSettlement(string codusr,string coddiv,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "UnlockSettlement",
                new object[] { codusr,coddiv, sc },
                disp,
                target);
        }

        #region Overrides


        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void UnlockDocument(DocumentObject document, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            Settlement doc = document as Settlement;
            UnlockSettlement(
                doc.CODUSR,
                doc.CODDIV
                ,sc,disp,target);
        }

        /// <summary>
        /// save a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="keepLocked">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void SaveDocument(DocumentObject document,bool keepLocked, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SaveSettlement((Settlement)document,keepLocked,sc,disp,target);
        }

        #endregion


        #region Snapshots


        /// <summary>
        /// Save a snapshot of the input document. Version is auto-incremented
        /// by the system.
        /// </summary>
        /// <param name="bo" />
        /// <param name="description" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void AddVersion(Settlement bo, string description, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "AddVersion",
                new object[] { bo,description, sc },
                disp,
                target);
        }

        /// <summary>
        ///  Retreive the document with the specified version
        /// </summary>
        /// <param name="connection" />
        /// <param name="documentKey" />
        /// <param name="uniqueKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetVersionByDocumentKey(string documentKey, string uniqueKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "GetVersionByDocumentKey",
                new object[] { documentKey,uniqueKey, sc },
                disp,
                target);
        }

        /// <summary>
        /// Returns the document history. The collection will not
        /// contain the actual snapshot object (the saved xml string).
        /// If you need a specific version, call <code>GetVersion</code> method
        /// </summary>
        /// <param name="documentKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetDocumentHistoryByDocumentKey(String documentKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.SettlementEngineSLStub", "GetDocumentHistoryByDocumentKey",
                new object[] { documentKey, sc },
                disp,
                target);
        }

        #endregion


        #region Extra methods


        #endregion

    }

    ///<summary>
    /// Engine for document Settlement
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    public partial class SettlementEngine : SettlementEngineBase
    {
    }

#endregion


#region Consignment


    /// <summary>
    /// Customizer interface
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1040:AvoidEmptyInterfaces")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public partial interface IConsignmentEngineCustomizer
    {
    }

    ///<summary>
    /// Engine per la gestione del documento Consignment
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public abstract class ConsignmentEngineBase : BusinessDocumentEngine
    {

        #region Customizer Access


        /// <summary>
        /// Customizer reference
        /// </summary>
        private IConsignmentEngineCustomizer m_engineCustomizer;

        /// <summary>
        /// Customizer reference
        /// </summary>
        public IConsignmentEngineCustomizer Customizer
        {
            get { return m_engineCustomizer; }
        }

        #endregion


        #region Constructors


        /// <summary>
        /// Default constructor
        /// </summary>
        public ConsignmentEngineBase()
        {
            m_engineCustomizer = GetCustomizer<IConsignmentEngineCustomizer>("ConsignmentEngineCustomizer");
        }

        #endregion


        /// <summary>
        /// Check if document exist
        /// </summary>
        /// <param name="idconsignment">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CheckConsignmentExist(string idconsignment,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "CheckConsignmentExist",
                new object[] { idconsignment, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document head
        /// </summary>
        /// <param name="idconsignment">Chiave 1</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadConsignmentHead(string idconsignment,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "LoadConsignmentHead",
                new object[] { idconsignment, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document
        /// </summary>
        /// <param name="idconsignment">Chiave 1</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadConsignment(string idconsignment,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "LoadConsignment",
                new object[] { idconsignment, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadConsignments( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "LoadConsignments",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadConsignments( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "LoadConsignments",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadConsignmentHeads( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "LoadConsignmentHeads",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadConsignmentHeads( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "LoadConsignmentHeads",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Create a new document
        /// </summary>
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        /// <returns />
        public virtual void CreateNewConsignment(SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "CreateNewConsignment",
                new object[] { sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document head
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveConsignmentHead(Consignment rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "SaveConsignmentHead",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SaveConsignment(Consignment rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "SaveConsignment",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// delete a document
        /// </summary>
        /// <param name="idconsignment">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void DeleteConsignment(string idconsignment,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "DeleteConsignment",
                new object[] { idconsignment, sc },
                disp,
                target);
        }

        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="idconsignment">Chiave 1</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void UnlockConsignment(string idconsignment,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "UnlockConsignment",
                new object[] { idconsignment, sc },
                disp,
                target);
        }

        #region Overrides


        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void UnlockDocument(DocumentObject document, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            Consignment doc = document as Consignment;
            UnlockConsignment(
                doc.IDCONSIGNMENT
                ,sc,disp,target);
        }

        /// <summary>
        /// save a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="keepLocked">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void SaveDocument(DocumentObject document,bool keepLocked, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SaveConsignment((Consignment)document,keepLocked,sc,disp,target);
        }

        #endregion


        #region Snapshots


        /// <summary>
        /// Save a snapshot of the input document. Version is auto-incremented
        /// by the system.
        /// </summary>
        /// <param name="bo" />
        /// <param name="description" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void AddVersion(Consignment bo, string description, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "AddVersion",
                new object[] { bo,description, sc },
                disp,
                target);
        }

        /// <summary>
        ///  Retreive the document with the specified version
        /// </summary>
        /// <param name="connection" />
        /// <param name="documentKey" />
        /// <param name="uniqueKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetVersionByDocumentKey(string documentKey, string uniqueKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "GetVersionByDocumentKey",
                new object[] { documentKey,uniqueKey, sc },
                disp,
                target);
        }

        /// <summary>
        /// Returns the document history. The collection will not
        /// contain the actual snapshot object (the saved xml string).
        /// If you need a specific version, call <code>GetVersion</code> method
        /// </summary>
        /// <param name="documentKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetDocumentHistoryByDocumentKey(String documentKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.ConsignmentEngineSLStub", "GetDocumentHistoryByDocumentKey",
                new object[] { documentKey, sc },
                disp,
                target);
        }

        #endregion


        #region Extra methods


        #endregion

    }

    ///<summary>
    /// Engine for document Consignment
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    public partial class ConsignmentEngine : ConsignmentEngineBase
    {
    }

#endregion


#region PharmaBP


    /// <summary>
    /// Customizer interface
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1040:AvoidEmptyInterfaces")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public partial interface IPharmaBPEngineCustomizer
    {
    }

    ///<summary>
    /// Engine per la gestione del documento PharmaBP
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BOCreator", "1")]
    public abstract class PharmaBPEngineBase : BusinessDocumentEngine
    {

        #region Customizer Access


        /// <summary>
        /// Customizer reference
        /// </summary>
        private IPharmaBPEngineCustomizer m_engineCustomizer;

        /// <summary>
        /// Customizer reference
        /// </summary>
        public IPharmaBPEngineCustomizer Customizer
        {
            get { return m_engineCustomizer; }
        }

        #endregion


        #region Constructors


        /// <summary>
        /// Default constructor
        /// </summary>
        public PharmaBPEngineBase()
        {
            m_engineCustomizer = GetCustomizer<IPharmaBPEngineCustomizer>("PharmaBPEngineCustomizer");
        }

        #endregion


        /// <summary>
        /// Check if document exist
        /// </summary>
        /// <param name="customer">Chiave 1</param>
        /// <param name="codcluster">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void CheckPharmaBPExist(string customer,string codcluster,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "CheckPharmaBPExist",
                new object[] { customer,codcluster, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document head
        /// </summary>
        /// <param name="customer">Chiave 1</param>
        /// <param name="codcluster">Chiave 2</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadPharmaBPHead(string customer,string codcluster,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "LoadPharmaBPHead",
                new object[] { customer,codcluster, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load document
        /// </summary>
        /// <param name="customer">Chiave 1</param>
        /// <param name="codcluster">Chiave 2</param>
        /// <param name="lockDocument">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadPharmaBP(string customer,string codcluster,bool lockDocument,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "LoadPharmaBP",
                new object[] { customer,codcluster, lockDocument, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadPharmaBPs( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "LoadPharmaBPs",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadPharmaBPs( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "LoadPharmaBPs",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="orderBy">ordering</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadPharmaBPHeads( SqlConstraints constraints,OrderByTerms orderBy,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "LoadPharmaBPHeads",
                new object[] { constraints,orderBy, sc },
                disp,
                target);
        }

        /// <summary>
        /// Load documents heads collection
        /// </summary>
        /// <param name="constraints">load constraints</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void LoadPharmaBPHeads( SqlConstraints constraints,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "LoadPharmaBPHeads",
                new object[] { constraints, sc },
                disp,
                target);
        }

        /// <summary>
        /// Create a new document
        /// </summary>
        /// <param name="sc" />
        /// <param name="disp" />
        /// <param name="target" />
        /// <returns />
        public virtual void CreateNewPharmaBP(SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "CreateNewPharmaBP",
                new object[] { sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document head
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SavePharmaBPHead(PharmaBP rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "SavePharmaBPHead",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// Save document
        /// </summary>
        /// <param name="rootObj">document to save</param>
        /// <param name="keepLocked">if lock must be kept</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void SavePharmaBP(PharmaBP rootObj,bool keepLocked,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "SavePharmaBP",
                new object[] { rootObj,keepLocked, sc },
                disp,
                target);
        }

        /// <summary>
        /// delete a document
        /// </summary>
        /// <param name="customer">Chiave 1</param>
        /// <param name="codcluster">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void DeletePharmaBP(string customer,string codcluster,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "DeletePharmaBP",
                new object[] { customer,codcluster, sc },
                disp,
                target);
        }

        /// <summary>
        /// unlock a document
        /// </summary>
        /// <param name="customer">Chiave 1</param>
        /// <param name="codcluster">Chiave 2</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public virtual void UnlockPharmaBP(string customer,string codcluster,SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "UnlockPharmaBP",
                new object[] { customer,codcluster, sc },
                disp,
                target);
        }

        #region Overrides


        /// <summary>
        /// save a document
        /// </summary>
        /// <param name="document">document</param>
        /// <param name="keepLocked">true if document must be locked</param>
        /// <param name="sc">SM1 user context</param>
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public override void SaveDocument(DocumentObject document,bool keepLocked, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            SavePharmaBP((PharmaBP)document,keepLocked,sc,disp,target);
        }

        #endregion


        #region Snapshots


        /// <summary>
        /// Save a snapshot of the input document. Version is auto-incremented
        /// by the system.
        /// </summary>
        /// <param name="bo" />
        /// <param name="description" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void AddVersion(PharmaBP bo, string description, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
            ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "AddVersion",
                new object[] { bo,description, sc },
                disp,
                target);
        }

        /// <summary>
        ///  Retreive the document with the specified version
        /// </summary>
        /// <param name="connection" />
        /// <param name="documentKey" />
        /// <param name="uniqueKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetVersionByDocumentKey(string documentKey, string uniqueKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "GetVersionByDocumentKey",
                new object[] { documentKey,uniqueKey, sc },
                disp,
                target);
        }

        /// <summary>
        /// Returns the document history. The collection will not
        /// contain the actual snapshot object (the saved xml string).
        /// If you need a specific version, call <code>GetVersion</code> method
        /// </summary>
        /// <param name="documentKey" />
        /// <param name="sc" />
        /// <param name="disp">Thread for response</param>
        /// <param name="target">response action</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1505:AvoidUnmaintainableCode")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        public void GetDocumentHistoryByDocumentKey(String documentKey, SessionContext sc,Dispatcher disp,AsyncDataReceiver target)
        {
             ServerProxy.CallServerMethodAsync(
                "Xtel.SM1.SalesForce", "Xtel.SM1.SalesForce.PharmaBPEngineSLStub", "GetDocumentHistoryByDocumentKey",
                new object[] { documentKey, sc },
                disp,
                target);
        }

        #endregion


        #region Extra methods


        #endregion

    }

    ///<summary>
    /// Engine for document PharmaBP
    ///</summary>
    [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
    public partial class PharmaBPEngine : PharmaBPEngineBase
    {
    }

#endregion

}
